<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/rabbit
                           http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
                           http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.0.xsd">


    <util:properties id="rabbitmq" location="classpath:rabbitmq.properties"/>

    <rabbit:connection-factory id="mayConnectionFactory"
                               channel-cache-size="20"
                               host="#{rabbitmq['rabbitmq.host']}"
                               username="#{rabbitmq['rabbitmq.username']}"
                               password="#{rabbitmq['rabbitmq.password']}"
                               port="#{rabbitmq['rabbitmq.port']}"/>
    <rabbit:admin id="mayAdmin" connection-factory="mayConnectionFactory"/>

    <rabbit:template id="amqpTemplate" connection-factory="mayConnectionFactory"/>

    <rabbit:connection-factory id="ConnectionFactory"
                               channel-cache-size="20"
                               host="#{rabbitmq['rabbitmq.host']}"
                               username="#{rabbitmq['rabbitmq.username']}"
                               password="#{rabbitmq['rabbitmq.password']}"
                               port="#{rabbitmq['rabbitmq.port']}"/>
    <rabbit:admin id="Admin" connection-factory="ConnectionFactory"/>

    <!--retry Interceptor-->
    <bean id="retryInterceptor"
          class="org.springframework.amqp.rabbit.config.StatelessRetryOperationsInterceptorFactoryBean">
        <property name="messageRecoverer" ref="messageRecoverer"/>
        <property name="retryOperations" ref="retryTemplate"/>
    </bean>

    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
                <property name="initialInterval" value="60000"/>
                <property name="maxInterval" value="3600000"/>
            </bean>
        </property>
        <property name="retryPolicy">
            <bean class="org.springframework.retry.policy.SimpleRetryPolicy">
                <property name="maxAttempts" value="7"/>
            </bean>
        </property>
    </bean>

    <bean id="messageRecoverer" class="com.bobby.peng.learning.mq.MessageRecover"/>

    <rabbit:template id="privateMessageAmqpTemplate" connection-factory="ConnectionFactory"/>

    <bean id="unAckTestListener" class="com.bobby.peng.learning.mq.UnAckTestListener"/>

    <bean id="retryTestListener" class="com.bobby.peng.learning.mq.RetryTestListener"/>

    <rabbit:queue id="Queue"
                  declared-by="Admin"
                  durable="true"
                  auto-delete="false"
                  exclusive="false"
                  name="#{rabbitmq['queue']}">
        <rabbit:queue-arguments>
            <entry key="x-dead-letter-exchange" value="#{rabbitmq['retry.exchange']}"/>
            <entry key="x-dead-letter-routing-key" value="#{rabbitmq['retry.queue']}"/>
        </rabbit:queue-arguments>
    </rabbit:queue>

    <rabbit:queue id="RetryQueue"
                  declared-by="Admin"
                  durable="true"
                  auto-delete="false"
                  exclusive="false"
                  name="#{rabbitmq['retry.queue']}">
        <rabbit:queue-arguments>
            <entry key="x-dead-letter-exchange" value="#{rabbitmq['dead.letter.exchange']}"/>
            <entry key="x-dead-letter-routing-key"
                   value="#{rabbitmq['dead.letter.queue']}"/>
        </rabbit:queue-arguments>
    </rabbit:queue>

    <rabbit:queue id="DeadLetterQueue"
                  declared-by="Admin"
                  durable="true"
                  auto-delete="false"
                  exclusive="false"
                  name="#{rabbitmq['dead.letter.queue']}"/>

    <rabbit:direct-exchange id="DeadLetterExchange"
                            declared-by="Admin"
                            durable="true"
                            auto-delete="false"
                            name="#{rabbitmq['dead.letter.exchange']}">
        <rabbit:bindings>
            <rabbit:binding queue="DeadLetterQueue"
                            key="#{rabbitmq['dead.letter.queue']}"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>


    <rabbit:direct-exchange id="RetryExchange"
                            declared-by="Admin"
                            durable="true"
                            auto-delete="false"
                            name="#{rabbitmq['retry.exchange']}">
        <rabbit:bindings>
            <rabbit:binding queue="RetryQueue"
                            key="#{rabbitmq['retry.queue']}"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <rabbit:direct-exchange id="Exchange"
                            declared-by="Admin"
                            name="#{rabbitmq['exchange']}"
                            durable="true"
                            auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="Queue" key="#{rabbitmq['routing.key']}"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <bean id="ListenerContainer"
          class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer">
        <property name="prefetchCount" value="20"/>
        <property name="concurrentConsumers" value="10"/>
        <property name="maxConcurrentConsumers" value="20"/>
        <property name="connectionFactory" ref="ConnectionFactory"/>
        <property name="defaultRequeueRejected" value="false"/>
        <property name="acknowledgeMode" value="AUTO"/>
        <property name="queues" ref="Queue"/>
        <property name="messageListener" ref="unAckTestListener"/>
    </bean>

    <bean id="RetryListenerContainer"
          class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer">
        <property name="prefetchCount" value="20"/>
        <property name="concurrentConsumers" value="10"/>
        <property name="maxConcurrentConsumers" value="20"/>
        <property name="connectionFactory" ref="ConnectionFactory"/>
        <property name="defaultRequeueRejected" value="false"/>
        <property name="acknowledgeMode" value="AUTO"/>
        <property name="queues" ref="RetryQueue"/>
        <property name="messageListener" ref="retryTestListener"/>
        <property name="adviceChain">
            <array>
                <ref bean="RetryInterceptor"/>
            </array>
        </property>
    </bean>

    <bean id="RetryInterceptor"
          class="org.springframework.amqp.rabbit.config.StatelessRetryOperationsInterceptorFactoryBean">
        <property name="messageRecoverer" ref="messageRecoverer"/>
        <property name="retryOperations" ref="RetryTemplate"/>
    </bean>

    <bean id="RetryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
                <property name="initialInterval" value="2000"/>
                <property name="maxInterval" value="300000"/>
            </bean>
        </property>
        <property name="retryPolicy">
            <bean class="org.springframework.retry.policy.SimpleRetryPolicy">
                <property name="maxAttempts" value="7"/>
            </bean>
        </property>
    </bean>
</beans>
